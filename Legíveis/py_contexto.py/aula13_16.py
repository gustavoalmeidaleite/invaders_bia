# -*- coding: utf-8 -*-
"""Aula13-16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zh5jeF4n9oYHM_1ohCSoAJvgwNi18T-V

# **Exemplo de Associação entre Classes**
"""

#Exemplo de classe e instanciação de objetos
class Editora:

  def __init__(self, nome):
    self.__nome = nome

  @property       #definição da propriedade __nome
  def nome(self):
    return self.__nome

  @nome.setter    #restringe modificação da propriedade __nome pelo método
  def nome(self, nome):
    # print("Entrou no Método.")
    self.__nome = nome

  def __str__ (self):
    return f' {self.nome}'

# Instanciação de um objeto editora
# ed1 = Editora("Elsevier")
# print(ed1)
# print(ed1.nome)
# ed1.nome = "Pearson"
# print(ed1.nome)
# ed1.nome = "Elsevier"
# print(ed1.nome)

class Autor:

  def __init__(self, nome):
    self.__nome = nome

  @property         #definição da propriedade __nome
  def nome(self):
    return self.__nome

  @nome.setter      #restringe modificação da propriedade __nome pelo método
  def nome(self, nome):
    self.__nome = nome

  def __str__ (self):
    return f' {self.nome}'

#Exemplo da classe Livro
class Livro:
  def __init__(self, nome):
    self.__nome = nome
    self.__autor = None
    self.__editora = None

  @property       #Refere-se à Propriedade __nome da Classe Livro
  def nome(self): #se definir o metodo como nomeE, a propriedade __nome será
                  #acessada como nomeE
    return self.__nome

  @nome.setter    #Refere-se à Propriedade __nome da Classe Livro
  def nomes(self, nome):
    self.__nome = nome

  @property       #Refere-se à Classe Autor
  def autor(self):
    return self.__autor

  @autor.setter #Refere-se à Classe Autor
  def autor(self, autor):
    self.__autor = autor

  @property       #Refere-se à Classe Editora
  def editora(self):
    return self.__editora

  @editora.setter #Refere-se à Classe Editora
  def editora(self, editora):
    self.__editora = editora

  def __str__ (self):
        return f' [{self.nome}, {self.autor}, {self.editora}]'

# Instanciação de um objeto Livro
l1 = Livro("Intelligence Artificial, a modern aproach")
# l1.autor = "Russell & Norvig"
# l1.editora = "Person"

ed1 = Editora("Person")  #Instanciação do objeto ed1
au1 = Autor("Russell & Norvig") #Instanciação do objeto au1
l1.editora = ed1 #Assiciando ed1 com l1
l1.autor = au1   #Assiciando au1 com l1

print(l1)

"""# **Exemplo de Agregação entre Classes**"""

class Produto:

  def __init__(self, nome, codigo, valor):
    self.__nome = nome
    self.__codigo = codigo
    self.__valor = valor

  @property       #getter Refere-se à Propriedade __nome da Classe Produto
  def nome(self):
    return self.__nome

  @nome.setter    #setter Refere-se à Propriedade __nome da Classe Produto
  def nome(self, nome):
    self.__nome = nome

  @property       #getter Refere-se à Propriedade __codigo da Classe Produto
  def codigo(self):
    return self.__codigo

  @codigo.setter    #setter Refere-se à Propriedade __codigo da Classe Produto
  def codigo(self, codigo):
    self.__codigo = codigo

  @property       #getter Refere-se à Propriedade __valor da Classe Produto
  def valor(self):
    return self.__valor

  @valor.setter    #setter Refere-se à Propriedade __valor da Classe Produto
  def valor(self, valor):
    self.__valor = valor

  def __str__ (self):
        return f' [{self.nome}, {self.codigo}, {self.valor}]'

#from produto import Produto #Se for importar de arquivo separado (sem notebook)
class Carrinho:

  def __init__(self):
    self.__produtos = []

  def inserir(self, produto):
    self.__produtos.append(produto)

  def remover(self, codigo):
    for produto in self.__produtos:
      if produto.codigo == codigo:
        self.__produtos.remove(produto)

  def __str__ (self):
    strListaProdutos = ""
    for produto in self.__produtos:
      strListaProdutos += f' [{produto.nome}, {produto.codigo}, {produto.valor}] \n'
    return strListaProdutos

#from carrinho import Carrinho #Se for importar de arquivo separado (sem notebook)
#from produto import Produto #Se for importar de arquivo separado (sem notebook)

c = Carrinho()                          #objeto criado
p1 = Produto('Água Sanitária', 1, 8.0)  #objeto criado
p2 = Produto('Biscoito', 2, 3.5)        #objeto criado
c.inserir(p1) #Objeto p1 Agregado ao c
c.inserir(p2) #Objeto p2 Agregado ao c
print('Imprimindo o Carrinho:')
print(c)
print('Removendo o Produto com código 2.')
c.remover(2)
print(c)
del c         #Objeto c Destruído
print('Os objetos Produtos continuam a existir após deletar o Carrinho:')
print(p1)
print(p2)

"""# **Exemplo de Composição entre Classes**"""

#from produto import Produto #Se for importar de arquivo separado (sem notebook)
class Venda:

  def __init__(self, cliente, data, horario):
    self.__cliente = cliente
    self.__data = data
    self.__horario = horario
    self.__produtos = []

  def inserir(self, nome, codigo, valor):
    p = Produto(nome, codigo, valor)
    self.__produtos.append(p)

  def remover(self, codigo):
    for produto in self.__produtos:
      if produto.codigo == codigo:
        self.__produtos.remove(produto)

  def buscar(self, codigo):
    for produto in self.__produtos:
      if produto.codigo == codigo:
        return produto

  def __str__ (self):
    strListaProdutos = ""
    for produto in self.__produtos:
      strListaProdutos += f' [{produto.nome}, {produto.codigo}, {produto.valor}] \n'
    return strListaProdutos

#from venda import Venda     #Se for importar de arquivo separado (sem notebook)
#from produto import Produto #Se for importar de arquivo separado (sem notebook)

v1 = Venda('Pelé', '02/09/25', '15:10')  #objeto criado
v1.inserir('Bola', 1, 180.0)             #objeto a ser criado na classe Venda
v1.inserir('Meião', 2, 40.0)             #objeto a ser criado na classe Venda
v1.inserir('Short', 3, 55.0)             #objeto a ser criado na classe Venda
v1.inserir('Camiseta', 4, 99.5)          #objeto a ser criado na classe Venda
print(v1)

v2 = Venda('Maradona', '02/09/25', '15:10')  #objeto criado
v2.inserir('Açúcar Refinado', 5, 8.50)      #objeto a ser criado na classe Venda
v2.inserir('Torta de Chocolate', 6, 135.0)   #objeto a ser criado na classe Venda
v2.inserir('Refrigerante 2 l', 7, 12.0)      #objeto a ser criado na classe Venda
print(v2)
print(' Pelo Método Buscar', v1.buscar(1))
del v1
# print(v1.buscar(1))