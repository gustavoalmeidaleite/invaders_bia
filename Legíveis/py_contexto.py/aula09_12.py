# -*- coding: utf-8 -*-
"""Aula09-12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PU_sS3N-kqlKI8UwxXH6h-gDskTdyVKK
"""

#Exemplo de classe e instanciação de objetos
class Fruta:

    def __init__(self, nome, cor, peso, comestivel, estado):
        self.nome = nome
        self.cor = cor                #verde, amarela, vermelha, ...
        self.peso = peso              #em gramas
        self.comestivel = comestivel  #0 não, 1 sim
        self.estado = estado          #estado pode ser: 0 verde, 1 vez, 2 madura, 3 podre.

    def crescer(self, peso):
        self.peso += peso

    def amadurecer(self):
        self.estado += 1

    def descricao(self):
        print("Nome:", self.nome, "Cor:", self.cor, "Peso:", self.peso, "Comestível:", self.comestivel, "Estado:", self.estado)

# Instanciação de um objeto fruta
f1 = Fruta("manga", "verde", 200, 1, 0)
f1.descricao()
f1.crescer(10)
f1.amadurecer()
f1.descricao()

#Exemplo da classe Carro
class Carro:

    def __init__(self, velocidade=0): #se não passar parâmetro, o default é 0.
        self.velocidade = velocidade

    def acelera(self): #ideia conceitual
        self.velocidade += 1

    def frea(self):    #ideia conceitual
        if (self.velocidade > 0):
            self.velocidade -= 1


# Instanciação de um objeto carro
c1 = Carro()
c1.acelera()
c1.acelera()
c1.frea()
c1.frea()
c1.frea()
print(c1.velocidade)

#Variação do exemplo da classe Carro
class Carro:

   seq = 0  #variável de classe

   def __init__(self, velocidade: int = 0):
       self.__class__.seq += 1
       self.id = self.__class__.seq #variável de instância
       self.velocidade = velocidade #variável de instância

   def acelera(self): #ideia conceitual
       self.velocidade += 1

   def frea(self):    #ideia conceitual
       if (self.velocidade > 0):
           self.velocidade -= 1

   def __del__(self):
      self.__class__.seq -= 1

#Criacão de instâncias
c1 = Carro(0)
c1.acelera()
c1.velocidade=90  #acesso direto à variável
c2 = Carro(0)
c3 = Carro(0)
for x in range(0,10):
  c3.acelera()
print(c1.velocidade, 'km/h, \tid: ', c1.id, ' \tcarro.seq: ', Carro.seq)
print(c2.velocidade, 'km/h, \tid: ', c2.id, ' \tcarro.seq: ', Carro.seq)
print(c3.velocidade, 'km/h, \tid: ', c3.id, ' \tcarro.seq: ', Carro.seq)

print('Valor de carro.seq: ', Carro.seq)

#Exemplo de Encapsulamento
class Carro:

    def __init__(self, velocidade: int = 0, cor = ''):
        self.__velocidade = velocidade #variável de instância
        self.__cor = cor

    @property             #definição da propriedade velocidade
    def velocidade(self):
        return self.__velocidade

    @velocidade.setter    #restringe modificação da propriedade velocidade
    def velocidade(self, incremento):
        self.__velocidade += incremento

    @property              #definição da propriedade cor
    def cor(self):
        return self.__cor

    @cor.setter            #restringe modificação da propriedade cor
    def cor(self, cor):
        self.__cor = cor

c1 = Carro(1,'branco')
c1.velocidade = 5
c1.cor = 'azul'
print('Velocidade: ', c1.velocidade, ' Cor:', c1.cor)

class VeiculoTerrestre:

    def __init__(self, tipo):
        self.__tipo = tipo

    @property
    def tipo(self):  #definição da propriedade tipo
        return self.__tipo

    @tipo.setter
    def tipo(self, tipo = '4x2'):
        self.__tipo = tipo

c1 = VeiculoTerrestre('4x2')
print('Carro do tipo: ', c1.tipo)
c1.tipo = '4x4'
print('Carro do tipo: ', c1.tipo)

# import veiculoTerrestre #se fosse um arquivo separado
# class Carro(veiculoTerrestre.VeiculoTerrestre): #se fosse um arquivo veiculoTerrestre
class Carro(VeiculoTerrestre):

    seq = 0  #variável de classe

    def __init__(self, tipo, velocidade: int = 0):
        self.__class__.seq += 1
        super().__init__(tipo)
        self.__id = self.__class__.seq #variável de instância
        self.__velocidade = velocidade #variável de instância

    @property             #definição da propriedade velocidade
    def velocidade(self):
        return self.__velocidade

    @velocidade.setter    #restringe modificação da propriedade velocidade
    def velocidade(self, velocidade):
        self.__velocidade += velocidade
        if (self.__velocidade > 200):
            self.__velocidade = 200
        elif (self.__velocidade < 0):
            self.__velocidade = 0

    @property
    def id(self):
      return self.__id

c1 = Carro("4x2", 0)
c1.velocidade = 210
print(c1.velocidade, 'km/h,\t tipo: ', c1.tipo, '\tId: ', c1.id)
c1.velocidade = -210
c1.tipo = '8x8'
print(c1.velocidade, 'km/h,\t\t tipo: ', c1.tipo, '\tId: ', c1.id)